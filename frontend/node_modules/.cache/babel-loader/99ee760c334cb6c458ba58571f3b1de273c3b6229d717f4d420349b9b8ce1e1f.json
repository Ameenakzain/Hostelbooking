{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Bookmyhostel\\\\frontend\\\\src\\\\components\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport \"../styles/ResetPassword.css\"; // Use the same CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log(\"Extracted token:\", token);\n    if (!token) {\n      setError(\"Invalid or expired reset link.\");\n    }\n  }, [token]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    if (!newPassword.trim() || !confirmPassword.trim()) {\n      setError(\"All fields are required.\");\n      return;\n    }\n\n    // Ensure token exists\n    if (!token) {\n      setError(\"Invalid or expired reset link.\");\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/owners/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          resetToken: token,\n          newPassword,\n          confirmPassword\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.message || \"Failed to reset the password.\");\n        return;\n      }\n      setMessage(\"Password successfully reset. Redirecting to login...\");\n      setError(\"\");\n      setTimeout(() => navigate(\"/owner-login\"), 3000);\n    } catch (err) {\n      console.error(\"Error resetting password:\", err);\n      setError(err.message || \"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"BOOKmyHOSTEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your new password below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter new password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm new password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/owner-login\"),\n        className: \"back-to-login\",\n        children: \"\\u2190 Back to login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"YrfTZ9GdssvS8Csb9acwa2YuU7w=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","ResetPassword","_s","token","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","navigate","console","log","handleSubmit","e","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","resetToken","data","json","ok","setTimeout","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/Bookmyhostel/frontend/src/components/ResetPassword.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport \"../styles/ResetPassword.css\"; // Use the same CSS file\r\n\r\nconst ResetPassword = () => {\r\n  const { token } = useParams();\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    console.log(\"Extracted token:\", token);\r\n    if (!token) {\r\n      setError(\"Invalid or expired reset link.\");\r\n    }\r\n  }, [token]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    if (!newPassword.trim() || !confirmPassword.trim()) {\r\n      setError(\"All fields are required.\");\r\n      return;\r\n    }\r\n  \r\n    // Ensure token exists\r\n    if (!token) {\r\n      setError(\"Invalid or expired reset link.\");\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setError(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/owners/reset-password\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ resetToken: token, newPassword, confirmPassword }),\r\n\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        setError(data.message || \"Failed to reset the password.\");\r\n        return;\r\n      }\r\n\r\n      setMessage(\"Password successfully reset. Redirecting to login...\");\r\n      setError(\"\");\r\n      setTimeout(() => navigate(\"/owner-login\"), 3000);\r\n    } catch (err) {\r\n      console.error(\"Error resetting password:\", err);\r\n      setError(err.message || \"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"reset-password-container\">\r\n      <header className=\"header\">\r\n        <h1>BOOKmyHOSTEL</h1>\r\n      </header>\r\n\r\n      <div className=\"reset-password-form\">\r\n        <h2>Reset your password</h2>\r\n        <p>Enter your new password below.</p>\r\n\r\n        {message && <p className=\"success-message\">{message}</p>}\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter new password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm new password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\">Reset Password</button>\r\n        </form>\r\n\r\n        <button onClick={() => navigate(\"/owner-login\")} className=\"back-to-login\">\r\n          &#8592; Back to login\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAO,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAM,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACdiB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEX,KAAK,CAAC;IACtC,IAAI,CAACA,KAAK,EAAE;MACVQ,QAAQ,CAAC,gCAAgC,CAAC;IAC5C;EACF,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI,CAACP,WAAW,CAACc,IAAI,CAAC,CAAC,IAAI,CAACZ,eAAe,CAACY,IAAI,CAAC,CAAC,EAAE;MAClDP,QAAQ,CAAC,0BAA0B,CAAC;MACpC;IACF;;IAEA;IACA,IAAI,CAACR,KAAK,EAAE;MACVQ,QAAQ,CAAC,gCAAgC,CAAC;MAC1C;IACF;IAEA,IAAIP,WAAW,KAAKE,eAAe,EAAE;MACnCK,QAAQ,CAAC,yBAAyB,CAAC;MACnC;IACF;IAEA,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;QAC9EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,UAAU,EAAEvB,KAAK;UAAEC,WAAW;UAAEE;QAAgB,CAAC;MAE1E,CAAC,CAAC;MAEF,MAAMqB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAElC,IAAI,CAACT,QAAQ,CAACU,EAAE,EAAE;QAChBlB,QAAQ,CAACgB,IAAI,CAACnB,OAAO,IAAI,+BAA+B,CAAC;QACzD;MACF;MAEAC,UAAU,CAAC,sDAAsD,CAAC;MAClEE,QAAQ,CAAC,EAAE,CAAC;MACZmB,UAAU,CAAC,MAAMlB,QAAQ,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC;IAClD,CAAC,CAAC,OAAOmB,GAAG,EAAE;MACZlB,OAAO,CAACH,KAAK,CAAC,2BAA2B,EAAEqB,GAAG,CAAC;MAC/CpB,QAAQ,CAACoB,GAAG,CAACvB,OAAO,IAAI,sCAAsC,CAAC;IACjE;EACF,CAAC;EAGD,oBACER,OAAA;IAAKgC,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvCjC,OAAA;MAAQgC,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACxBjC,OAAA;QAAAiC,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eAETrC,OAAA;MAAKgC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCjC,OAAA;QAAAiC,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BrC,OAAA;QAAAiC,QAAA,EAAG;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAEpC7B,OAAO,iBAAIR,OAAA;QAAGgC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAEzB;MAAO;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACvD3B,KAAK,iBAAIV,OAAA;QAAGgC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEvB;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAElDrC,OAAA;QAAMsC,QAAQ,EAAEvB,YAAa;QAAAkB,QAAA,gBAC3BjC,OAAA;UACEuC,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,oBAAoB;UAChCC,KAAK,EAAErC,WAAY;UACnBsC,QAAQ,EAAG1B,CAAC,IAAKX,cAAc,CAACW,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;UAChDG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFrC,OAAA;UACEuC,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,sBAAsB;UAClCC,KAAK,EAAEnC,eAAgB;UACvBoC,QAAQ,EAAG1B,CAAC,IAAKT,kBAAkB,CAACS,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;UACpDG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFrC,OAAA;UAAQuC,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eAEPrC,OAAA;QAAQ6C,OAAO,EAAEA,CAAA,KAAMjC,QAAQ,CAAC,cAAc,CAAE;QAACoB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAE3E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnC,EAAA,CAjGID,aAAa;EAAA,QACCH,SAAS,EAKVD,WAAW;AAAA;AAAAiD,EAAA,GANxB7C,aAAa;AAmGnB,eAAeA,aAAa;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}