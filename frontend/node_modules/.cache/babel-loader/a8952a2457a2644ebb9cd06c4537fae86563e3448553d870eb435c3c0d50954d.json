{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Bookmyhostel\\\\frontend\\\\src\\\\components\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"../styles/ForgotPassword.css\"; // Use the same CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  var _location$state;\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Extract email/phone from query params or state (passed from ForgotPassword)\n  const emailOrPhone = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.emailOrPhone;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/owners/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          emailOrPhone,\n          newPassword\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setError(errorData.message || \"Failed to reset the password. Please try again.\");\n        return;\n      }\n      const data = await response.json();\n      setMessage(data.message || \"Password successfully reset.\");\n      setError(\"\");\n\n      // Redirect to login page after successful reset\n      setTimeout(() => navigate(\"/owner-login\"), 3000);\n    } catch (err) {\n      console.error(\"Error resetting password:\", err);\n      setError(\"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"BOOKmyHOSTEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your new password below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter new password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm new password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/owner-login\"),\n        className: \"back-to-login\",\n        children: \"\\u2190 Back to login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"4xzlv6Vt5UIDA9OXnF5Jqv9WEC4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","ResetPassword","_s","_location$state","newPassword","setNewPassword","message","setMessage","error","setError","navigate","location","emailOrPhone","state","handleSubmit","e","preventDefault","confirmPassword","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","data","setTimeout","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","setConfirmPassword","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/Bookmyhostel/frontend/src/components/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport \"../styles/ForgotPassword.css\"; // Use the same CSS file\r\n\r\nconst ResetPassword = () => {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  \r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Extract email/phone from query params or state (passed from ForgotPassword)\r\n  const emailOrPhone = location.state?.emailOrPhone;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setError(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/owners/reset-password\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          emailOrPhone,\r\n          newPassword,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        setError(errorData.message || \"Failed to reset the password. Please try again.\");\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      setMessage(data.message || \"Password successfully reset.\");\r\n      setError(\"\");\r\n\r\n      // Redirect to login page after successful reset\r\n      setTimeout(() => navigate(\"/owner-login\"), 3000);\r\n    } catch (err) {\r\n      console.error(\"Error resetting password:\", err);\r\n      setError(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgot-password-container\">\r\n      <header className=\"header\">\r\n        <h1>BOOKmyHOSTEL</h1>\r\n      </header>\r\n\r\n      <div className=\"forgot-password-form\">\r\n        <h2>Reset your password</h2>\r\n        <p>Enter your new password below.</p>\r\n\r\n        {message && <p className=\"success-message\">{message}</p>}\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter new password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm new password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\">Reset Password</button>\r\n        </form>\r\n\r\n        <button onClick={() => navigate(\"/owner-login\")} className=\"back-to-login\">\r\n          &#8592; Back to login\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}